{"ast":null,"code":"var _jsxFileName = \"/home/moises/projetos/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA:\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, checkin.id === props.use.sub), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, JSON.stringify(checkin.coords)), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, checkin.distance));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todayData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todayData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todayData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance( //todayData.coordinates.latitude, \n          //todayData.coordinates.longitude, \n          -5.79448, -35.211, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(2)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    console.log(todaysCheckin.data());\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/moises/projetos/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","use","sub","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","get","todayData","data","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude","toFixed","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport {db} from '../lib/db'\nimport {distance} from '../lib/geo'\n\nconst App = props =>{\n    useEffect(() => {\n        if(!props.isAuth){\n            router.push('/')\n        } else if(props.forceCreate){\n            router.push('/create-status')\n        }\n    })\n    if(!props.isAuth || props.forceCreate){\n        return null\n    }\n    return (\n        <div>\n            <h1>Status próximos a você:</h1>\n            <table>\n                {props.checkins.map(checkin => {\n                    return(\n                        <tr>\n                            <td>{checkin.id === props.use.sub}</td>\n                            <td>{checkin.status}</td>\n                            <td>{JSON.stringify(checkin.coords)}</td>\n                            <td>{checkin.distance}</td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default App\n\nexport async function getServerSideProps({req, res}){\n    const session = await auth0.getSession(req)\n    if(session){\n        const today = new Date()\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n        const todaysCheckin = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .doc(session.user.sub)\n            .get()\n        const todayData =  todaysCheckin.data()\n        let forceCreate = true\n        if(todayData){\n            //pode ver os outros checkins\n            forceCreate = false\n            const checkins = await db.collection('markers')\n                .doc(currentDate).collection('checks')\n                .near({\n                    center: todayData.coordinates,\n                    radius: 1000\n                }).get()\n                const checkinsList = []\n                checkins.docs.forEach(doc=>{\n                    checkinsList.push({\n                        id: doc.id,\n                        status: doc.data().status,\n                        coords: {\n                            lat: doc.data().coordinates.latitude,\n                            long: doc.data().coordinates.longitude\n                        },\n                        distance: distance(\n                            //todayData.coordinates.latitude, \n                            //todayData.coordinates.longitude, \n                            -5.79448,\n                            -35.211,\n                            doc.data().coordinates.latitude, \n                            doc.data().coordinates.longitude\n                        ).toFixed(2)\n                    })\n                })\n                return{\n                    props:{\n                        isAuth: true,\n                        user: session.user,\n                        forceCreate: false,\n                        checkins: checkinsList\n                    }\n                }\n        }\n        console.log(todaysCheckin.data())\n        \n        return{\n            props:{\n                isAuth: true,\n                user: session.user,\n                forceCreate\n            }\n        }\n    }\n    return{\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}
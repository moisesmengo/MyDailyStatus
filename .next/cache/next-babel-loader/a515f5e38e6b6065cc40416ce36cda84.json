{"ast":null,"code":"//alert(calcCrow(59.3293371,13.4877472,59.3225525,13.4619422).toFixed(1));\n//This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\nexport function distance(lat1, lon1, lat2, lon2) {\n  var R = 6371; // km\n\n  var dLat = toRad(lat2 - lat1);\n  var dLon = toRad(lon2 - lon1);\n  var lat1 = toRad(lat1);\n  var lat2 = toRad(lat2);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n} // Converts numeric degrees to radians\n\nfunction toRad(Value) {\n  return Value * Math.PI / 180;\n}","map":{"version":3,"sources":["/home/moises/projetos/mydailystatus/lib/geo.js"],"names":["distance","lat1","lon1","lat2","lon2","R","dLat","toRad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","Value","PI"],"mappings":"AAAA;AAEI;AACA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,IAApC,EACP;AACE,MAAIC,CAAC,GAAG,IAAR,CADF,CACgB;;AACd,MAAIC,IAAI,GAAGC,KAAK,CAACJ,IAAI,GAACF,IAAN,CAAhB;AACA,MAAIO,IAAI,GAAGD,KAAK,CAACH,IAAI,GAACF,IAAN,CAAhB;AACA,MAAID,IAAI,GAAGM,KAAK,CAACN,IAAD,CAAhB;AACA,MAAIE,IAAI,GAAGI,KAAK,CAACJ,IAAD,CAAhB;AAEA,MAAIM,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASL,IAAI,GAAC,CAAd,IAAmBI,IAAI,CAACC,GAAL,CAASL,IAAI,GAAC,CAAd,CAAnB,GACNI,IAAI,CAACC,GAAL,CAASH,IAAI,GAAC,CAAd,IAAmBE,IAAI,CAACC,GAAL,CAASH,IAAI,GAAC,CAAd,CAAnB,GAAsCE,IAAI,CAACE,GAAL,CAASX,IAAT,CAAtC,GAAuDS,IAAI,CAACE,GAAL,CAAST,IAAT,CADzD;AAEA,MAAIU,CAAC,GAAG,IAAIH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,IAAL,CAAUN,CAAV,CAAX,EAAyBC,IAAI,CAACK,IAAL,CAAU,IAAEN,CAAZ,CAAzB,CAAZ;AACA,MAAIO,CAAC,GAAGX,CAAC,GAAGQ,CAAZ;AACA,SAAOG,CAAP;AACD,C,CAED;;AACA,SAAST,KAAT,CAAeU,KAAf,EACA;AACI,SAAOA,KAAK,GAAGP,IAAI,CAACQ,EAAb,GAAkB,GAAzB;AACH","sourcesContent":["//alert(calcCrow(59.3293371,13.4877472,59.3225525,13.4619422).toFixed(1));\n\n    //This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\n    export function distance(lat1, lon1, lat2, lon2) \n    {\n      var R = 6371; // km\n      var dLat = toRad(lat2-lat1);\n      var dLon = toRad(lon2-lon1);\n      var lat1 = toRad(lat1);\n      var lat2 = toRad(lat2);\n\n      var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n      var d = R * c;\n      return d;\n    }\n\n    // Converts numeric degrees to radians\n    function toRad(Value) \n    {\n        return Value * Math.PI / 180;\n    }"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/moises/projetos/mydailystatus/pages/app.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router from 'next/router';\n\nvar App = function App(props) {\n  useEffect(function () {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, props.checkins.map(function (checkin) {\n    return __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, checkin.id), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, checkin.coords));\n  })), __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport var __N_SSP = true;\nexport default App;","map":{"version":3,"sources":["/home/moises/projetos/mydailystatus/pages/app.js"],"names":["React","useEffect","router","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","status","coords","JSON","stringify"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,MAAP,MAAmB,aAAnB;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAG;AAChBH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,CAACG,KAAK,CAACC,MAAV,EAAiB;AACbH,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACH,KAFD,MAEO,IAAGF,KAAK,CAACG,WAAT,EAAqB;AACxBL,MAAAA,MAAM,CAACI,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;;AAOA,MAAG,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA1B,EAAsC;AAClC,WAAO,IAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO,EAAI;AAC3B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAO,CAACC,EAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACE,MAAb,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,OAAO,CAACG,MAAb,CAHJ,CADJ;AAOH,GARA,CADL,CAFJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeX,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAbJ,CADJ;AAiBH,CA5BD;;;AA8BA,eAAeD,GAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport {db} from '../lib/db'\n\nconst App = props =>{\n    useEffect(() => {\n        if(!props.isAuth){\n            router.push('/')\n        } else if(props.forceCreate){\n            router.push('/create-status')\n        }\n    })\n    if(!props.isAuth || props.forceCreate){\n        return null\n    }\n    return (\n        <div>\n            <h1>App</h1>\n            <table>\n                {props.checkins.map(checkin => {\n                    return(\n                        <tr>\n                            <td>{checkin.id}</td>\n                            <td>{checkin.status}</td>\n                            <td>{checkin.coords}</td>\n                        </tr>\n                    )\n                })}\n            </table>\n            <pre>{JSON.stringify(props, null, 2)}</pre>\n        </div>\n    )\n}\n\nexport default App\n\nexport async function getServerSideProps({req, res}){\n    const session = await auth0.getSession(req)\n    if(session){\n        const today = new Date()\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n        const todaysCheckin = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .doc(session.user.sub)\n            .get()\n        const todayData =  todaysCheckin.data()\n        let forceCreate = true\n        if(todayData){\n            //pode ver os outros checkins\n            forceCreate = false\n            const checkins = await db.collection('markers')\n                .doc(currentDate).collection('checks')\n                .near({\n                    center: todayData.coordinates,\n                    radius: 1000\n                }).get()\n                const checkinsList = []\n                checkins.docs.forEach(doc=>{\n                    checkinsList.push({\n                        id: doc.id,\n                        status: doc.data().status,\n                        coords: {\n                            lat: doc.data().coordinates.latitude,\n                            long: doc.data().coordinates.longitude\n                        }\n                    })\n                })\n                return{\n                    props:{\n                        isAuth: true,\n                        user: session.user,\n                        forceCreate: false,\n                        checkins: checkinsList\n                    }\n                }\n        }\n        console.log(todaysCheckin.data())\n        \n        return{\n            props:{\n                isAuth: true,\n                user: session.user,\n                forceCreate\n            }\n        }\n    }\n    return{\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}
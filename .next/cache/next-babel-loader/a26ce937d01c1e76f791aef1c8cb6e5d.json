{"ast":null,"code":"var _jsxFileName = \"/home/moises/projetos/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, checkin.id);\n  })), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todayData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todayData) {\n      //pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todayData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push(_objectSpread({}, doc.data(), {\n          id: doc.id\n        }));\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    console.log(todaysCheckin.data());\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/moises/projetos/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","JSON","stringify","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todayData","data","near","center","coordinates","radius","checkinsList","docs","forEach","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,EAAR,QAAiB,WAAjB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAG;AAChBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACK,KAAK,CAACC,MAAV,EAAiB;AACbJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAFD,MAEO,IAAGF,KAAK,CAACG,WAAT,EAAqB;AACxBN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;;AAOA,MAAG,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA1B,EAAsC;AAClC,WAAO,IAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AAC3B,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAO,CAACC,EAAb,CADA;AAGH,GAJA,CADL,CAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeT,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CATJ,CADJ;AAaH,CAxBD;;AA0BA,eAAeD,GAAf;AAEA,OAAO,eAAeW,kBAAf,CAAkC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAlC,EAA6C;AAChD,QAAMC,OAAO,GAAG,MAAMjB,KAAK,CAACkB,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAGE,OAAH,EAAW;AACP,UAAME,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA+C,GAA/C,GAAqDJ,KAAK,CAACK,OAAN,EAAzE;AACA,UAAMC,aAAa,GAAG,MAAMvB,EAAE,CACzBwB,UADuB,CACZ,SADY,EAEvBC,GAFuB,CAEnBN,WAFmB,EAGvBK,UAHuB,CAGZ,QAHY,EAIvBC,GAJuB,CAInBV,OAAO,CAACW,IAAR,CAAaC,GAJM,EAKvBC,GALuB,EAA5B;AAMA,UAAMC,SAAS,GAAIN,aAAa,CAACO,IAAd,EAAnB;AACA,QAAIzB,WAAW,GAAG,IAAlB;;AACA,QAAGwB,SAAH,EAAa;AACT;AACAxB,MAAAA,WAAW,GAAG,KAAd;AACA,YAAMC,QAAQ,GAAG,MAAMN,EAAE,CAACwB,UAAH,CAAc,SAAd,EAClBC,GADkB,CACdN,WADc,EACDK,UADC,CACU,QADV,EAElBO,IAFkB,CAEb;AACFC,QAAAA,MAAM,EAAEH,SAAS,CAACI,WADhB;AAEFC,QAAAA,MAAM,EAAE;AAFN,OAFa,EAKhBN,GALgB,EAAvB;AAMI,YAAMO,YAAY,GAAG,EAArB;AACA7B,MAAAA,QAAQ,CAAC8B,IAAT,CAAcC,OAAd,CAAsBZ,GAAG,IAAE;AACvBU,QAAAA,YAAY,CAAC/B,IAAb,mBACOqB,GAAG,CAACK,IAAJ,EADP;AAEIrB,UAAAA,EAAE,EAAEgB,GAAG,CAAChB;AAFZ;AAIH,OALD;AAMA,aAAM;AACFP,QAAAA,KAAK,EAAC;AACFC,UAAAA,MAAM,EAAE,IADN;AAEFuB,UAAAA,IAAI,EAAEX,OAAO,CAACW,IAFZ;AAGFrB,UAAAA,WAAW,EAAE,KAHX;AAIFC,UAAAA,QAAQ,EAAE6B;AAJR;AADJ,OAAN;AAQP;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYhB,aAAa,CAACO,IAAd,EAAZ;AAEA,WAAM;AACF5B,MAAAA,KAAK,EAAC;AACFC,QAAAA,MAAM,EAAE,IADN;AAEFuB,QAAAA,IAAI,EAAEX,OAAO,CAACW,IAFZ;AAGFrB,QAAAA;AAHE;AADJ,KAAN;AAOH;;AACD,SAAM;AACFH,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,KADL;AAEHuB,MAAAA,IAAI,EAAE;AAFH;AADL,GAAN;AAMH","sourcesContent":["import React, {useEffect} from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport {db} from '../lib/db'\n\nconst App = props =>{\n    useEffect(() => {\n        if(!props.isAuth){\n            router.push('/')\n        } else if(props.forceCreate){\n            router.push('/create-status')\n        }\n    })\n    if(!props.isAuth || props.forceCreate){\n        return null\n    }\n    return (\n        <div>\n            <h1>App</h1>\n            <table>\n                {props.checkins.map(checkin => {\n                    return(\n                    <tr>{checkin.id}</tr>\n                    )\n                })}\n            </table>\n            <pre>{JSON.stringify(props, null, 2)}</pre>\n        </div>\n    )\n}\n\nexport default App\n\nexport async function getServerSideProps({req, res}){\n    const session = await auth0.getSession(req)\n    if(session){\n        const today = new Date()\n        const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n        const todaysCheckin = await db\n            .collection('markers')\n            .doc(currentDate)\n            .collection('checks')\n            .doc(session.user.sub)\n            .get()\n        const todayData =  todaysCheckin.data()\n        let forceCreate = true\n        if(todayData){\n            //pode ver os outros checkins\n            forceCreate = false\n            const checkins = await db.collection('markers')\n                .doc(currentDate).collection('checks')\n                .near({\n                    center: todayData.coordinates,\n                    radius: 1000\n                }).get()\n                const checkinsList = []\n                checkins.docs.forEach(doc=>{\n                    checkinsList.push({\n                        ...doc.data(),\n                        id: doc.id\n                    })\n                })\n                return{\n                    props:{\n                        isAuth: true,\n                        user: session.user,\n                        forceCreate: false,\n                        checkins: checkinsList\n                    }\n                }\n        }\n        console.log(todaysCheckin.data())\n        \n        return{\n            props:{\n                isAuth: true,\n                user: session.user,\n                forceCreate\n            }\n        }\n    }\n    return{\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}